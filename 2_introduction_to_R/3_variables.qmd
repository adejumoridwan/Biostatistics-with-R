---
title: "Variables"
author: "Adejumo Ridwan Suleiman"
output: html_document
---

## Variables

### Storing data
A variable is a name used to store data, so that we can refer to a dataset when we write code. As the name *variable* implies, what is stored can change over time.

The code

```{r eval=FALSE}
x <- 4
```



In RStudio, you can also create the assignment operator `<-` by using the keyboard shortcut Alt+- (i.e. press Alt and the - button at the same time).

```{r eval=FALSE}
x + 1
x + x
```


```{r eval=FALSE}
x <- 1 + 2 + 3 + 4
```



In rare cases, you may want to switch the direction of the arrow, so that the variable names is on the right-hand side. This is called right-assignment and works just fine too:

```{r eval=FALSE}
2 + 2 -> y
```


#### Exercise

Do the following using R: 1. Compute the sum 924+124 and assign the result to a variable named `a`. 2. Compute a\*a

### What's in a name?

You now know how to assign values to variables. But what should you call your variables? Of course, you can follow the examples in the previous section and give your variables names like `x`, `y`, `a` and `b`. However, you don't have to use single-letter names, and for the sake of readability, it is often preferable to give your variables more informative names. Compare the following two code chunks:

```{r eval=FALSE}
y <- 100
z <- 20
x <- y - z
```

and

```{r eval=FALSE}
income <- 100
taxes <- 20
net_income <- income - taxes
```

```{r eval=FALSE}
#############################################################
#  This lovely little code snippet can be used to compute   #
#                   your net income.                        #
#############################################################
# Set income and taxes:
income <- 100  # Replace 100 with your income
taxes <- 20    # Replace 20 with how much taxes you pay
# Compute your net income:
net_income <- income - taxes
```

In the Script panel in RStudio, you can comment and uncomment (i.e. remove the `#` symbol) a row by pressing Ctrl+Shift+C on your keyboard. This is particularly useful if you wish to comment or uncomment several lines - simply select the lines and press Ctrl+Shift+C.

#### Exercise

1.  What happens if you use an invalid character in a variable name? Try e.g. the following:

```{r eval=FALSE}
net income <- income - taxes
net-income <- income - taxes
ca$h <- income - taxes
```

2.  What happens if you put R code as a comment? E.g.:

```{r eval=FALSE}
income <- 100
taxes <- 20
net_income <- income - taxes
# gross_income <- net_income + taxes
```

3.  What happens if you remove a line break and replace it by a semicolon `;`? E.g.:

```{r eval=FALSE}
income <- 200; taxes <- 30
```

4.  What happens if you do two assignments on the same line? E.g.:

```{r eval=FALSE}
income2 <- taxes2 <- 100
```
